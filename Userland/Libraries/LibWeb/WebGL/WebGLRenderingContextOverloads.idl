// https://registry.khronos.org/webgl/specs/latest/1.0/#5.14
interface mixin WebGLRenderingContextOverloads {
    [FIXME] undefined bufferData(GLenum target, GLsizeiptr size, GLenum usage);
    [FIXME] undefined bufferData(GLenum target, AllowSharedBufferSource? data, GLenum usage);
    [FIXME] undefined bufferSubData(GLenum target, GLintptr offset, AllowSharedBufferSource data);

    [FIXME] undefined compressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, [AllowShared] ArrayBufferView data);
    [FIXME] undefined compressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, [AllowShared] ArrayBufferView data);

    [FIXME] undefined readPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, [AllowShared] ArrayBufferView? pixels);

    [FIXME] undefined texImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, [AllowShared] ArrayBufferView? pixels);
    [FIXME] undefined texImage2D(GLenum target, GLint level, GLint internalformat, GLenum format, GLenum type, TexImageSource source); // May throw DOMException

    [FIXME] undefined texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, [AllowShared] ArrayBufferView? pixels);
    [FIXME] undefined texSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLenum format, GLenum type, TexImageSource source); // May throw DOMException

    [FIXME] undefined uniform1fv(WebGLUniformLocation? location, Float32List v);
    [FIXME] undefined uniform2fv(WebGLUniformLocation? location, Float32List v);
    [FIXME] undefined uniform3fv(WebGLUniformLocation? location, Float32List v);
    [FIXME] undefined uniform4fv(WebGLUniformLocation? location, Float32List v);

    [FIXME] undefined uniform1iv(WebGLUniformLocation? location, Int32List v);
    [FIXME] undefined uniform2iv(WebGLUniformLocation? location, Int32List v);
    [FIXME] undefined uniform3iv(WebGLUniformLocation? location, Int32List v);
    [FIXME] undefined uniform4iv(WebGLUniformLocation? location, Int32List v);

    [FIXME] undefined uniformMatrix2fv(WebGLUniformLocation? location, GLboolean transpose, Float32List value);
    [FIXME] undefined uniformMatrix3fv(WebGLUniformLocation? location, GLboolean transpose, Float32List value);
    [FIXME] undefined uniformMatrix4fv(WebGLUniformLocation? location, GLboolean transpose, Float32List value);
};
