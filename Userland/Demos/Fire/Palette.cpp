/*
 * Copyright (c) 2021, Ryan Wilson <ryan@rdwilson.xyz>
 *
 * SPDX-License-Identifier: BSD-2-Clause
 */

#include "Palette.h"
Palette::Palette(FireColor color)
{
    m_fire_color = move(color);
    switch (color) {
    case FireColor::Orange:
        m_palette = {
            Color(0x07, 0x07, 0x07), Color(0x1F, 0x07, 0x07), Color(0x2F, 0x0F, 0x07),
            Color(0x47, 0x0F, 0x07), Color(0x57, 0x17, 0x07), Color(0x67, 0x1F, 0x07),
            Color(0x77, 0x1F, 0x07), Color(0x9F, 0x2F, 0x07), Color(0xAF, 0x3F, 0x07),
            Color(0xBF, 0x47, 0x07), Color(0xC7, 0x47, 0x07), Color(0xDF, 0x4F, 0x07),
            Color(0xDF, 0x57, 0x07), Color(0xD7, 0x5F, 0x07), Color(0xD7, 0x5F, 0x07),
            Color(0xD7, 0x67, 0x0F), Color(0xCF, 0x6F, 0x0F), Color(0xCF, 0x7F, 0x0F),
            Color(0xCF, 0x87, 0x17), Color(0xC7, 0x87, 0x17), Color(0xC7, 0x8F, 0x17),
            Color(0xC7, 0x97, 0x1F), Color(0xBF, 0x9F, 0x1F), Color(0xBF, 0xA7, 0x27),
            Color(0xBF, 0xAF, 0x2F), Color(0xB7, 0xAF, 0x2F), Color(0xB7, 0xB7, 0x37),
            Color(0xCF, 0xCF, 0x6F), Color(0xEF, 0xEF, 0xC7), Color(0xFF, 0xFF, 0xFF)
        };
        break;
    case FireColor::Green:
        m_palette = {
            Color(0x07, 0x07, 0x07), Color(0x07, 0x1F, 0x07), Color(0x0F, 0x2F, 0x07),
            Color(0x0F, 0x47, 0x07), Color(0x17, 0x57, 0x07), Color(0x1F, 0x67, 0x07),
            Color(0x1F, 0x77, 0x07), Color(0x2F, 0x9F, 0x07), Color(0x3F, 0xAF, 0x07),
            Color(0x47, 0xBF, 0x07), Color(0x47, 0xC7, 0x07), Color(0x4F, 0xDF, 0x07),
            Color(0x57, 0xDF, 0x07), Color(0x5F, 0xD7, 0x07), Color(0x5F, 0xD7, 0x07),
            Color(0x67, 0xD7, 0x0F), Color(0x6F, 0xCF, 0x0F), Color(0x7F, 0xCF, 0x0F),
            Color(0x87, 0xCF, 0x17), Color(0x87, 0xC7, 0x17), Color(0x8F, 0xC7, 0x17),
            Color(0x97, 0xC7, 0x1F), Color(0x9F, 0xBF, 0x1F), Color(0xA7, 0xBF, 0x27),
            Color(0xAF, 0xBF, 0x2F), Color(0xAF, 0xB7, 0x2F), Color(0xB7, 0xB7, 0x37),
            Color(0xCF, 0xCF, 0x6F), Color(0xEF, 0xEF, 0xC7), Color(0xFF, 0xFF, 0xFF)
        };
        break;
    case FireColor::Purple:
        m_palette = {
            Color(0x07, 0x07, 0x07), Color(0x07, 0x07, 0x1F), Color(0x0F, 0x07, 0x2F),
            Color(0x0F, 0x07, 0x47), Color(0x17, 0x07, 0x57), Color(0x1F, 0x07, 0x67),
            Color(0x1F, 0x07, 0x77), Color(0x2F, 0x07, 0x9F), Color(0x3F, 0x07, 0xAF),
            Color(0x47, 0x07, 0xBF), Color(0x47, 0x07, 0xC7), Color(0x4F, 0x07, 0xDF),
            Color(0x57, 0x07, 0xDF), Color(0x5F, 0x07, 0xD7), Color(0x5F, 0x07, 0xD7),
            Color(0x67, 0x0F, 0xD7), Color(0x6F, 0x0F, 0xCF), Color(0x7F, 0x0F, 0xCF),
            Color(0x87, 0x17, 0xCF), Color(0x87, 0x17, 0xC7), Color(0x8F, 0x17, 0xC7),
            Color(0x97, 0x1F, 0xC7), Color(0x9F, 0x1F, 0xBF), Color(0xA7, 0x27, 0xBF),
            Color(0xAF, 0x2F, 0xBF), Color(0xAF, 0x2F, 0xB7), Color(0xB7, 0x37, 0xB7),
            Color(0xCF, 0x6F, 0xCF), Color(0xEF, 0xC7, 0xEF), Color(0xFF, 0xFF, 0xFF)
        };
        break;
    }
}

Palette::~Palette()
{
}
