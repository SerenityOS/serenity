From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jelle Raaijmakers <jelle@gmta.nl>
Date: Fri, 24 Dec 2021 15:24:16 +0100
Subject: [PATCH] Fix config macro reference syntax

---
 src/game_config.c | 24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/src/game_config.c b/src/game_config.c
index f12bb2d..6d1e979 100644
--- a/src/game_config.c
+++ b/src/game_config.c
@@ -114,26 +114,26 @@ struct param {
  */
 
 #define INIT_PARAM( nam, val, typename, commnt ) \
-   Params. ## nam ## .loaded = False; \
-   Params. ## nam ## .name = #nam; \
-   Params. ## nam ## .deflt. ## typename ## _val  = val; \
-   Params. ## nam ## .comment = commnt;
+   Params.nam.loaded = False; \
+   Params.nam.name = #nam; \
+   Params.nam.deflt.typename ## _val  = val; \
+   Params.nam.comment = commnt;
 
 #define INIT_PARAM_STRING( nam, val, commnt ) \
    INIT_PARAM( nam, val, string, commnt ); \
-   Params. ## nam ## .type = PARAM_STRING;
+   Params.nam.type = PARAM_STRING;
 
 #define INIT_PARAM_CHAR( nam, val, commnt ) \
    INIT_PARAM( nam, val, char, commnt ); \
-   Params. ## nam ## .type = PARAM_CHAR;
+   Params.nam.type = PARAM_CHAR;
 
 #define INIT_PARAM_INT( nam, val, commnt ) \
    INIT_PARAM( nam, val, int, commnt ); \
-   Params. ## nam ## .type = PARAM_INT;
+   Params.nam.type = PARAM_INT;
 
 #define INIT_PARAM_BOOL( nam, val, commnt ) \
    INIT_PARAM( nam, val, bool, commnt ); \
-   Params. ## nam ## .type = PARAM_BOOL;
+   Params.nam.type = PARAM_BOOL;
 
 
 /*
@@ -310,13 +310,13 @@ void set_param_bool( struct param *p, bool_t new_val )
  */
 #define FN_PARAM( name, typename, type ) \
     type getparam_ ## name() { \
-        if ( !Params. ## name ## .loaded ) { \
-            fetch_param_ ## typename( &( Params. ## name ) ); \
+        if ( !Params.name.loaded ) { \
+            fetch_param_ ## typename( &( Params.name ) ); \
         } \
-        return Params. ## name ## .val. ## typename ## _val; \
+        return Params.name.val.typename ## _val; \
     } \
     void setparam_ ## name( type val) { \
-        set_param_ ## typename( &( Params. ## name ), val ); } 
+        set_param_ ## typename( &( Params.name ), val ); } 
 
 #define FN_PARAM_STRING( name ) \
     FN_PARAM( name, string, char* )
