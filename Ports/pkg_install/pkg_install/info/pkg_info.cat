PKG_INFO(1)                 General Commands Manual                PKG_INFO(1)

NNAAMMEE
     ppkkgg__iinnffoo - a utility for displaying information on software packages

SSYYNNOOPPSSIISS
     ppkkgg__iinnffoo [--BBbbccDDddFFffhhIIiikkLLmmNNnnppqqRRrrSSssVVvvXX] [--EE _p_k_g_-_n_a_m_e] [--ee _p_k_g_-_n_a_m_e]
              [--KK _p_k_g___d_b_d_i_r] [--ll _p_r_e_f_i_x] _p_k_g_-_n_a_m_e _._._.
     ppkkgg__iinnffoo [--aa | --uu] [flags]
     ppkkgg__iinnffoo [--QQ _v_a_r_i_a_b_l_e] _p_k_g_-_n_a_m_e _._._.

DDEESSCCRRIIPPTTIIOONN
     The ppkkgg__iinnffoo command is used to dump out information for packages, which
     may be either packed up in files or already installed on the system with
     the pkg_create(1) command.

     The _p_k_g_-_n_a_m_e may be the name of an installed package (with or without
     version), a pattern matching several installed packages (see the _P_A_C_K_A_G_E
     _W_I_L_D_C_A_R_D_S section for a description of possible patterns), the pathname
     to a binary package, a filename belonging to an installed package (with
     --FF), or a URL to an FTP-available package.

     The following command line options are available:

     --aa      Show information for all currently installed packages.  See also
             --uu.  When neither --aa nor --uu is given, the former is assumed.

     --BB      Show some of the important definitions used when building the
             binary package (the "Build information") for each package.
             Additionally, any installation information variables (lowercase)
             can be queried, too.  In particular, _a_u_t_o_m_a_t_i_c tells if a package
             was installed automatically as a dependency of another package.

     --bb      Show the NetBSD RCS Id strings from the files used in the
             construction of the binary package (the "Build version") for each
             package.  These files are the package Makefile, any patch files,
             any checksum files, and the packing list file.

     --cc      Show the one-line comment field for each package.

     --DD      Show the install-message file (if any) for each package.

     --dd      Show the long-description field for each package.

     --EE _p_k_g_-_n_a_m_e
             This option allows you to test for the existence of a given
             package.  If a package identified by _p_k_g_-_n_a_m_e is currently
             installed, return code is 0, otherwise 1.  The name of the best
             matching package found installed is printed to stdout unless
             turned off using the --qq option.  _p_k_g_-_n_a_m_e can contain wildcards
             (see the _P_A_C_K_A_G_E _W_I_L_D_C_A_R_D_S section below).

     --ee _p_k_g_-_n_a_m_e
             This option allows you to test for the existence of a given
             package.  If a package identified by _p_k_g_-_n_a_m_e is currently
             installed, return code is 0, otherwise 1.  The names of any
             package(s) found installed are printed to stdout unless turned
             off using the --qq option.  _p_k_g_-_n_a_m_e can contain wildcards (see the
             _P_A_C_K_A_G_E _W_I_L_D_C_A_R_D_S section below).

     --FF      Interpret any _p_k_g_-_n_a_m_e given as filename, and query information
             on the package that file belongs to.  This can be used to query
             information on a per-file basis.  See the _T_E_C_H_N_I_C_A_L _D_E_T_A_I_L_S
             section below for more information.

     --ff      Show the packing list instructions for each package.

     --hh      Print usage message and exit.

     --II      Show the index entry for each package.  This option is assumed
             when no arguments or relevant flags are specified.

     --ii      Show the install script (if any) for each package.

     --KK _p_k_g___d_b_d_i_r
             Override the value of the PKG_DBDIR configuration option with the
             value _p_k_g___d_b_d_i_r.

     --kk      Show the de-install script (if any) for each package.

     --LL      Show the files within each package.  This is different from just
             viewing the packing list, since full pathnames for everything are
             generated.  Files that were created dynamically during
             installation of the package are not listed.

     --ll _p_r_e_f_i_x
             Prefix each information category header (see --qq) shown with
             _p_r_e_f_i_x.  This is primarily of use to front-end programs that want
             to request a lot of different information fields at once for a
             package, but don't necessary want the output intermingled in such
             a way that they can't organize it.  This lets you add a special
             token to the start of each field.

     --mm      Show the mtree file (if any) for each package.

     --NN      Show which packages each package was built with (exact
             dependencies), if any.

     --nn      Show which packages each package needs (depends upon), if any.

     --pp      Show the installation prefix for each package.

     --QQ _v_a_r_i_a_b_l_e
             Show the definition of _v_a_r_i_a_b_l_e from the build information for
             each package.  An empty string is returned if no such variable
             definition is found for the package(s).

     --qq      Be "quiet" in emitting report headers and such, just dump the raw
             info (basically, assume a non-human reading).

     --RR      For each package, show the packages that require it.

     --rr      For each package, show the packages that require it.  Continue
             recursively to show all dependents.

     --SS      Show the size of this package and all the packages it requires,
             in bytes.

     --ss      Show the size of this package in bytes.  The size is calculated
             by adding up the size of each file of the package.

     --uu      Show information for all user-installed packages: automatically
             installed packages (as dependencies of other packages) are not
             displayed.  See also --aa.

     --VV      Print version number and exit.

     --vv      Turn on verbose output.

     --XX      Print summary information for each package.  The summary format
             is described in pkg_summary(5).  Its primary use is to contain
             all information about the contents of a (remote) binary package
             repository needed by package managing software.

TTEECCHHNNIICCAALL DDEETTAAIILLSS
     Package info is either extracted from package files named on the command
     line, or from already installed package information in
     _<_P_K_G___D_B_D_I_R_>_/_<_p_k_g_-_n_a_m_e_>.

     When the --FF option is used, a filename can be given instead of a package
     name to query information on the (installed) package that file belongs
     to.  The filename is resolved to a package name using the package
     database.  The filename must be absolute, as in the output of
           pkg_info -aF.
     For example,
           pkg_info -Fe /path/to/file
     can be used to display the package the given file belongs to, and
           pkg_info -LF /path/to/file
     can be used to display all files belonging to the package the given file
     belongs to.

PPAACCKKAAGGEE WWIILLDDCCAARRDDSS
     In the places where a package name/version is expected, e.g., for the --ee
     option, several forms can be used.  Either use a package name with or
     without version, or specify a package wildcard that gets matched against
     all installed packages.

     Package wildcards use fnmatch(3).  In addition, csh(1) style {,}
     alternates have been implemented.  Package version numbers can also be
     matched in a relational manner using the ">=", "<=", ">", and "<"
     operators.  For example,
           pkg_info -e 'name>=1.3'
     will match versions 1.3 and later of the "name" package.  (Make sure to
     use shell quoting.)  Additionally, ranges can be defined, by giving both
     a lower bound (with ">" or ">=") as well as an upper bound (with "<" or
     "<=").  The lower bound has to come first.  For example,
           pkg_info -e 'name>=1.3<2.0'
     will match versions 1.3 (inclusive) to 2.0 (exclusive) of package "name".

     The collating sequence of the various package version numbers is unusual,
     but strives to be consistent.  The magic string "alpha" equates to "alpha
     version", and sorts before a beta version.  The magic string "beta"
     equates to "beta version", and sorts before a release candidate.  The
     magic string "rc" equates to "release candidate", and sorts before a
     release.  The magic string "pre", short for "pre-release", is a synonym
     for "rc".  For example, "name-1.3alpha2" will sort before
     "name-1.3beta1", and they both sort before "name-1.3rc1".  Similarly,
     "name-1.3rc3" will sort before "name-1.3", and after "name-1.2.9".  The
     magic string "pl" equates to "patch level", and has the same value as a
     dot (`.') in the dewey-decimal ordering schemes, as does the underscore
     (`_').  Additionally, alphabetic characters sort in the same place as
     their numeric counterparts, so that "name-1.2e" has the same sorting
     value as "name-1.2.5".

EENNVVIIRROONNMMEENNTT
     See pkg_install.conf(5) for options, that can also be specified using the
     environment.

SSEEEE AALLSSOO
     pkg_add(1), pkg_admin(1), pkg_create(1), pkg_delete(1),
     pkg_install.conf(5) pkgsrc(7)

AAUUTTHHOORRSS
     Jordan Hubbard
             most of the work
     John Kohl
             refined it for NetBSD
     Hubert Feyrer
             NetBSD wildcard dependency processing, pkgdb, depends displaying,
             pkg size display, and more.

pkgsrc                         January 11, 2015                         pkgsrc
