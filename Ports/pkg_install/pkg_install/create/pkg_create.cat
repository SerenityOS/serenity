PKG_CREATE(1)               General Commands Manual              PKG_CREATE(1)

NNAAMMEE
     ppkkgg__ccrreeaattee - a utility for creating software package distributions

SSYYNNOOPPSSIISS
     ppkkgg__ccrreeaattee [--llOOVVvv] [--BB _b_u_i_l_d_-_i_n_f_o_-_f_i_l_e] [--bb _b_u_i_l_d_-_v_e_r_s_i_o_n_-_f_i_l_e]
                [--CC _c_p_k_g_s] [--DD _d_i_s_p_l_a_y_f_i_l_e] [--FF _c_o_m_p_r_e_s_s_i_o_n] [--gg _g_r_o_u_p]
                [--II _r_e_a_l_p_r_e_f_i_x] [--ii _i_s_c_r_i_p_t] [--KK _p_k_g___d_b_d_i_r] [--kk _d_s_c_r_i_p_t]
                [--nn _p_r_e_s_e_r_v_e_-_f_i_l_e] [--PP _d_p_k_g_s] [--pp _p_r_e_f_i_x] [--SS _s_i_z_e_-_a_l_l_-_f_i_l_e]
                [--ss _s_i_z_e_-_p_k_g_-_f_i_l_e] [--TT _b_u_i_l_d_p_k_g_s] [--tt _t_e_m_p_l_a_t_e] [--uu _o_w_n_e_r]
                --cc _c_o_m_m_e_n_t --dd _d_e_s_c_r_i_p_t_i_o_n --ff _p_a_c_k_l_i_s_t _p_k_g_-_n_a_m_e

DDEESSCCRRIIPPTTIIOONN
     The ppkkgg__ccrreeaattee command is used to create packages that will subsequently
     be fed to one of the package extraction/info utilities.  The input
     description and command line arguments for the creation of a package are
     not really meant to be human-generated, though it is easy enough to do
     so.  It is more expected that you will use a front-end tool for the job
     rather than muddling through it yourself.  Nonetheless, a short
     description of the input syntax is included in this document.

OOPPTTIIOONNSS
     The following command line options are supported:

     --BB _b_u_i_l_d_-_i_n_f_o_-_f_i_l_e
             Install the file _b_u_i_l_d_-_i_n_f_o_-_f_i_l_e so that users of binary packages
             can see what make(1) definitions were used to control the build
             when creating the binary package.  This allows various build
             definitions to be retained in a binary package and viewed
             wherever it is installed, using pkg_info(1).

     --bb _b_u_i_l_d_-_v_e_r_s_i_o_n_-_f_i_l_e
             Install the file _b_u_i_l_d_-_v_e_r_s_i_o_n_-_f_i_l_e so that users of binary
             packages can see what versions of the files used to control the
             build were used when creating the binary package.  This allows
             some fine-grained version control information to be retained in a
             binary package and viewed wherever it is installed, using
             pkg_info(1).

     --CC _c_p_k_g_s
             Set the initial package conflict list to _c_p_k_g_s.  This is assumed
             to be a whitespace separated list of package names and is meant
             as a convenient shorthand for specifying multiple @@ppkkggccffll
             directives in the packing list (see PACKING LIST DETAILS section
             below).

     --cc _[_-_]_d_e_s_c
             Fetch package (one line description) from file _d_e_s_c or, if
             preceded by --, the argument itself.  This string should also give
             some idea of which version of the product (if any) the package
             represents.

     --DD _d_i_s_p_l_a_y_f_i_l_e
             Display the file after installing the package.  Useful for things
             like legal notices on almost-free software, etc.

     --dd _[_-_]_d_e_s_c
             Fetch long description for package from file _d_e_s_c or, if preceded
             by --, the argument itself.

     --FF _c_o_m_p_r_e_s_s_i_o_n
             Use _c_o_m_p_r_e_s_s_i_o_n as compression algorithm.  This overrides the
             heuristic to guess the compression type from the output name.
             Currently supported values are bzip2, gzip, none and xz.

     --ff _p_a_c_k_l_i_s_t
             Fetch (packing list) for package from the file _p_a_c_k_l_i_s_t or ssttddiinn
             if _p_a_c_k_l_i_s_t is a -- (dash).

     --gg _g_r_o_u_p
             Make _g_r_o_u_p the default group ownership instead of extracting it
             from the file system.

     --II _r_e_a_l_p_r_e_f_i_x
             Provide the real prefix, as opposed to the staging prefix, for
             use in staged installations of packages.

     --ii _i_s_c_r_i_p_t
             Set _i_s_c_r_i_p_t to be the install procedure for the package.  This
             can be any executable program (or shell script).  It will be
             invoked automatically when the package is later installed.

     --KK _p_k_g___d_b_d_i_r
             Override the value of the PKG_DBDIR configuration option with the
             value _p_k_g___d_b_d_i_r.

     --kk _d_s_c_r_i_p_t
             Set _d_s_c_r_i_p_t to be the de-install procedure for the package.  This
             can be any executable program (or shell script).  It will be
             invoked automatically when the package is later (if ever) de-
             installed.

     --ll      Check that any symbolic links which are to be placed in the
             package are relative to the current prefix.  This means using
             unlink(2) and symlink(2) to remove and re-link any symbolic links
             which are targeted at full path names.

     --nn _p_r_e_s_e_r_v_e_-_f_i_l_e
             The file is used to denote that the package should not be
             deleted.  This is intended for use where the deletion of packages
             may present a bootstrap problem.

     --OO      Go into a (packing list only) mode.  This is used to do (fake
             pkg_add) operations when a package is installed.  In such cases,
             it is necessary to know what the final, adjusted packing list
             will look like.

     --PP _d_p_k_g_s
             Set the initial package dependency list to _d_p_k_g_s.  This is
             assumed to be a whitespace separated list of package names and is
             meant as a convenient shorthand for specifying multiple @@ppkkggddeepp
             directives in the packing list (see PACKING LIST DETAILS section
             below).  In addition, the exact versions of the packages referred
             to in the _d_p_k_g_s list will be added to the packing list in the
             form of @@bbllddddeepp directives.

     --TT _b_u_i_l_d_p_k_g_s
             The exact versions of the packages referred to in the _b_u_i_l_d_p_k_g_s
             list will be added to the packing list in the form of @@bbllddddeepp
             directives.  This directives are stored after those created by
             the --PP option.  _b_u_i_l_d_p_k_g_s is assumed to be a whitespace separated
             list of package names.

     --pp _p_r_e_f_i_x
             Set _p_r_e_f_i_x as the initial directory (base) to start from in
             selecting files for the package.

     --SS _s_i_z_e_-_a_l_l_-_f_i_l_e
             Store the given file for later querying with the pkg_info(1) --SS
             flag.  The file is expected to contain the size (in bytes) of all
             files of this package plus any required packages added up and
             stored as a ASCII string, terminated by a newline.

     --ss _s_i_z_e_-_p_k_g_-_f_i_l_e
             Store the given file for later querying with the pkg_info(1) --ss
             flag.  The file is expected to contain the size (in bytes) of all
             files of this package added up and stored as a ASCII string,
             terminated by a newline.

     --tt _t_e_m_p_l_a_t_e
             Use _t_e_m_p_l_a_t_e as the input to mktemp(3).  By default, this is the
             string _/_t_m_p_/_i_n_s_t_m_p_._X_X_X_X_X_X, but it may be necessary to override it
             in the situation where space in your _/_t_m_p directory is limited.
             Be sure to leave some number of `X' characters for mktemp(3) to
             fill in with a unique ID.

     --uu _o_w_n_e_r
             Make _o_w_n_e_r the default owner instead of extracting it from the
             file system.

     --VV      Print version number and exit.

     --vv      Turn on verbose output.

PPAACCKKIINNGG LLIISSTT DDEETTAAIILLSS
     The (packing list) format (see --ff) is fairly simple, being nothing more
     than a single column of filenames to include in the package.  However,
     since absolute pathnames are generally a bad idea for a package that
     could be installed potentially anywhere, there is another method of
     specifying where things are supposed to go and, optionally, what
     ownership and mode information they should be installed with.  This is
     done by embedding specialized command sequences in the packing list.
     Briefly described, these sequences are:
     @@ccwwdd _d_i_r_e_c_t_o_r_y
             Set the internal directory pointer to point to _d_i_r_e_c_t_o_r_y.  All
             subsequent filenames will be assumed relative to this directory.
             Note: @@ccdd is also an alias for this command.
     @@ssrrcc _d_i_r_e_c_t_o_r_y
             This command is supported for compatibility only.  It was
             formerly used to override @@ccwwdd during package creation.
     @@eexxeecc _c_o_m_m_a_n_d
             Execute _c_o_m_m_a_n_d as part of the unpacking process.  If _c_o_m_m_a_n_d
             contains any of the following sequences somewhere in it, they
             will be expanded inline.  For the following examples, assume that
             @@ccwwdd is set to _/_u_s_r_/_l_o_c_a_l and the last extracted file was
             _b_i_n_/_e_m_a_c_s.
             %%FF      Expands to the last filename extracted (as specified), in
                     the example case _b_i_n_/_e_m_a_c_s
             %%DD      Expand to the current directory prefix, as set with @@ccwwdd,
                     in the example case _/_u_s_r_/_l_o_c_a_l.
             %%BB      Expand to the (basename) of the fully qualified filename,
                     that is the current directory prefix, plus the last
                     filespec, minus the trailing filename.  In the example
                     case, that would be _/_u_s_r_/_l_o_c_a_l_/_b_i_n.
             %%ff      Expand to the (filename) part of the fully qualified
                     name, or the converse of %%BB, being in the example case,
                     _e_m_a_c_s.
     @@uunneexxeecc _c_o_m_m_a_n_d
             Execute _c_o_m_m_a_n_d as part of the deinstallation process.  Expansion
             of special %% sequences is the same as for @@eexxeecc.  This command is
             not executed during the package add, as @@eexxeecc is, but rather when
             the package is deleted.  This is useful for deleting links and
             other ancillary files that were created as a result of adding the
             package, but not directly known to the package's table of
             contents (and hence not automatically removable).  The advantage
             of using @@uunneexxeecc over a deinstallation script is that you can use
             the (special sequence expansion) to get at files regardless of
             where they've been potentially redirected (see --pp).
     @@mmooddee _m_o_d_e
             Set default permission for all subsequently extracted files to
             _m_o_d_e.  Format is the same as that used by the cchhmmoodd command
             (well, considering that it's later handed off to it, that's no
             surprise).  Use without an arg to set back to default
             (extraction) permissions.
     @@ooppttiioonn _o_p_t_i_o_n
             Set internal package options, the only currently supported one
             being _p_r_e_s_e_r_v_e, which tells pkg_add to move any existing files
             out of the way, preserving the previous contents (which are also
             resurrected on pkg_delete, so caveat emptor).
     @@oowwnneerr _u_s_e_r
             Set default ownership for all subsequently extracted files to
             _u_s_e_r.  Use without an arg to set back to default (extraction)
             ownership.
     @@ggrroouupp _g_r_o_u_p
             Set default group ownership for all subsequently extracted files
             to _g_r_o_u_p.  Use without an arg to set back to default (extraction)
             group ownership.
     @@ccoommmmeenntt _s_t_r_i_n_g
             Embed a comment in the packing list.  Useful in trying to
             document some particularly hairy sequence that may trip someone
             up later.
     @@iiggnnoorree
             Used internally to tell extraction to ignore the next file (don't
             copy it anywhere), as it's used for some special purpose.
     @@nnaammee _n_a_m_e
             Set the name of the package.  This is mandatory and is usually
             put at the top.  This name is potentially different than the name
             of the file it came in, and is used when keeping track of the
             package for later deinstallation.  Note that ppkkgg__ccrreeaattee will
             derive this field from the _p_k_g_-_n_a_m_e and add it automatically if
             none is given.
     @@ppkkggddiirr _n_a_m_e
             Declare directory _n_a_m_e as managed.  If it does not exist at
             installation time, it is created.  If this directory is no longer
             referenced by packages and the last file or directory in it is
             deleted, the directory is removed as well.
     @@ddiirrrrmm _n_a_m_e
             This command is supported for compatibility only.  If directory
             _n_a_m_e exists, it will be deleted at deinstall time.
     @@ddiissppllaayy _n_a_m_e
             Declare _n_a_m_e as the file to be displayed at install time (see --DD
             above).
     @@ppkkggddeepp _p_k_g_n_a_m_e
             Declare a dependency on the _p_k_g_n_a_m_e package.  The _p_k_g_n_a_m_e package
             must be installed before this package may be installed, and this
             package must be deinstalled before the _p_k_g_n_a_m_e package is
             deinstalled.  Multiple @@ppkkggddeepp directives may be used if the
             package depends on multiple other packages.
     @@bbllddddeepp _p_k_g_n_a_m_e
             Declare that this package was built with the exact version of
             _p_k_g_n_a_m_e (since the @@ppkkggddeepp directive may contain wildcards or
             relational package version information).
     @@ppkkggccffll _p_k_g_c_f_l_n_a_m_e
             Declare a conflict with the _p_k_g_c_f_l_n_a_m_e package, as the two
             packages contain references to the same files, and so cannot co-
             exist on the same system.

EENNVVIIRROONNMMEENNTT
     See pkg_install.conf(5) for options, that can also be specified using the
     environment.

SSEEEE AALLSSOO
     pkg_add(1), pkg_admin(1), pkg_delete(1), pkg_info(1), pkg_install.conf(5)
     pkgsrc(7)

HHIISSTTOORRYY
     The ppkkgg__ccrreeaattee command first appeared in FreeBSD.

AAUUTTHHOORRSS
     Jordan Hubbard
             most of the work
     John Kohl
             refined it for NetBSD
     Hubert Feyrer
             NetBSD wildcard dependency processing, pkgdb, pkg size recording
             etc.

pkgsrc                         December 27, 2014                        pkgsrc
