PKG_ADD(1)                  General Commands Manual                 PKG_ADD(1)

NNAAMMEE
     ppkkgg__aadddd - a utility for installing and upgrading software package
     distributions

SSYYNNOOPPSSIISS
     ppkkgg__aadddd [--AAffhhIInnRRUUuuVVvv] [--CC _c_o_n_f_i_g] [--KK _p_k_g___d_b_d_i_r] [--mm _m_a_c_h_i_n_e]
             [--PP _d_e_s_t_d_i_r] [--pp _p_r_e_f_i_x]
             _f_i_l_e _._._. [[ftp|http]://[_u_s_e_r][:_p_a_s_s_w_o_r_d]@]_h_o_s_t[:_p_o_r_t][/_p_a_t_h_/]_p_k_g_-_n_a_m_e _._._.

DDEESSCCRRIIPPTTIIOONN
     The ppkkgg__aadddd command is used to extract and upgrade packages that have
     been previously created with the pkg_create(1) command.  Packages are
     prepared collections of pre-built binaries, documentation,
     configurations, installation instructions and/or other files.  ppkkgg__aadddd
     can recursively install other packages that the current package depends
     on or requires from both local disk and via FTP or HTTP.

WWAARRNNIINNGG
     _S_i_n_c_e _t_h_e ppkkgg__aadddd _c_o_m_m_a_n_d _m_a_y _e_x_e_c_u_t_e _s_c_r_i_p_t_s _o_r _p_r_o_g_r_a_m_s _c_o_n_t_a_i_n_e_d
     _w_i_t_h_i_n _a _p_a_c_k_a_g_e _f_i_l_e_, _y_o_u_r _s_y_s_t_e_m _m_a_y _b_e _s_u_s_c_e_p_t_i_b_l_e _t_o _"_T_r_o_j_a_n _h_o_r_s_e_s_"
     _o_r _o_t_h_e_r _s_u_b_t_l_e _a_t_t_a_c_k_s _f_r_o_m _m_i_s_c_r_e_a_n_t_s _w_h_o _c_r_e_a_t_e _d_a_n_g_e_r_o_u_s _p_a_c_k_a_g_e
     _f_i_l_e_s_.

     _Y_o_u _a_r_e _a_d_v_i_s_e_d _t_o _v_e_r_i_f_y _t_h_e _c_o_m_p_e_t_e_n_c_e _a_n_d _i_d_e_n_t_i_t_y _o_f _t_h_o_s_e _w_h_o
     _p_r_o_v_i_d_e _i_n_s_t_a_l_l_a_b_l_e _p_a_c_k_a_g_e _f_i_l_e_s_.  _F_o_r _e_x_t_r_a _p_r_o_t_e_c_t_i_o_n_, _u_s_e _t_h_e _d_i_g_i_t_a_l
     _s_i_g_n_a_t_u_r_e_s _p_r_o_v_i_d_e_d _w_h_e_r_e _p_o_s_s_i_b_l_e _(_s_e_e _t_h_e _p_k_g___i_n_s_t_a_l_l_._c_o_n_f_(_5_)_)_, _o_r_,
     _f_a_i_l_i_n_g _t_h_a_t_, _u_s_e _t_a_r_(_1_) _t_o _e_x_t_r_a_c_t _t_h_e _p_a_c_k_a_g_e _f_i_l_e_, _a_n_d _i_n_s_p_e_c_t _i_t_s
     _c_o_n_t_e_n_t_s _a_n_d _s_c_r_i_p_t_s _t_o _e_n_s_u_r_e _i_t _p_o_s_e_s _n_o _d_a_n_g_e_r _t_o _y_o_u_r _s_y_s_t_e_m_'_s
     _i_n_t_e_g_r_i_t_y_.  _P_a_y _p_a_r_t_i_c_u_l_a_r _a_t_t_e_n_t_i_o_n _t_o _a_n_y _+_I_N_S_T_A_L_L _o_r _+_D_E_I_N_S_T_A_L_L _f_i_l_e_s_,
     _a_n_d _i_n_s_p_e_c_t _t_h_e _+_C_O_N_T_E_N_T_S _f_i_l_e _f_o_r @@ccwwdd_, @@mmooddee _(_c_h_e_c_k _f_o_r _s_e_t_u_i_d_)_,
     @@ddiirrrrmm_, @@eexxeecc_, _a_n_d @@uunneexxeecc _d_i_r_e_c_t_i_v_e_s_, _a_n_d_/_o_r _u_s_e _t_h_e _p_k_g___i_n_f_o_(_1_) _c_o_m_m_a_n_d
     _t_o _e_x_a_m_i_n_e _t_h_e _p_a_c_k_a_g_e _f_i_l_e_.

OOPPTTIIOONNSS
     The following command line arguments are supported:

     _p_k_g_-_n_a_m_e [_._._.]
             The named packages are installed.  ppkkgg__aadddd will first try to use
             _p_k_g_-_n_a_m_e as full URL or path name without any wildcard
             processing.  If that fails, ppkkgg__aadddd will try to match packages
             using wildcard processing.  If that fails as well and _p_k_g_-_n_a_m_e
             does not contain any /, the entries of the PKG_PATH variable are
             searched using the wildcard processing rules.

     --AA      Mark package as installed automatically, as dependency of another
             package.  You can use
                   ppkkgg__aaddmmiinn sseett aauuttoommaattiicc==YYEESS
             to mark packages this way after installation, and
                   ppkkgg__aaddmmiinn uunnsseett aauuttoommaattiicc
             to remove the mark.  If you ppkkgg__aadddd a package without specifying
             --AA after it had already been automatically installed, the mark is
             removed.

     --CC _c_o_n_f_i_g
             Read the configuration file from _c_o_n_f_i_g instead of the system
             default.

     --DD      Force updating even if the dependencies of depending packages are
             not satisfied by the new package.  This is used by "make
             replace", after which one would typically replace the depending
             packages.

     --ff      Force installation to proceed even if prerequisite packages are
             not installed or the install script fails.  Although ppkkgg__aadddd will
             still try to find and auto-install missing prerequisite packages,
             a failure to find one will not be fatal.  This flag also
             overrides the fatal error when the operating system or
             architecture the package was built on differ from that of the
             host.

     --hh      Display help and exit.

     --II      If an installation script exists for a given package, do not
             execute it.

     --KK _p_k_g___d_b_d_i_r
             Override the value of the PKG_DBDIR configuration option with the
             value _p_k_g___d_b_d_i_r.

     --mm      Override the machine architecture returned by uname with _m_a_c_h_i_n_e.

     --nn      Don't actually install a package, just report the steps that
             would be taken if it was.

     --PP _d_e_s_t_d_i_r
             Prefix all file and directory names with _d_e_s_t_d_i_r.  For packages
             without install scripts this has the same behavior as using
             chroot(8).

     --pp _p_r_e_f_i_x
             Override the prefix stored in the package with _p_r_e_f_i_x.

     --RR      Do not record the installation of a package.  This implies --II.
             This means that you cannot deinstall it later, so only use this
             option if you know what you are doing!

     --UU      Replace an already installed version from a package.  Implies --uu.

     --uu      If the package that's being installed is already installed, an
             update is performed.  Installed dependent packages are updated
             recursively, if they are too old to fulfill the dependencies of
             the to-be-installed version.  See below for a more detailed
             description of the process.

     --VV      Print version number and exit.

     --vv      Turn on verbose output.

     One or more _p_k_g_-_n_a_m_e arguments may be specified, each being either a file
     containing the package (these usually ending with the ".tgz" suffix) or a
     URL pointing at a file available on an ftp or web site.  Thus you may
     extract files directly from their anonymous ftp or WWW locations (e.g.,
     ppkkgg__aadddd
     ftp://ftp.NetBSD.org/pub/pkgsrc/packages/NetBSD/i386/3.1_2007Q2/shells/bash-3.2.9.tgz
     or ppkkgg__aadddd http://www.example.org/packages/screen-4.0.tbz).  Note:  For
     ftp transfers, if you wish to use _p_a_s_s_i_v_e _m_o_d_e ftp in such transfers, set
     the variable _F_T_P___P_A_S_S_I_V_E___M_O_D_E to some value in your environment.
     Otherwise, the more standard ACTIVE mode may be used.  If ppkkgg__aadddd
     consistently fails to fetch a package from a site known to work, it may
     be because you have a firewall that demands the usage of _p_a_s_s_i_v_e _m_o_d_e
     ftp.

TTEECCHHNNIICCAALL DDEETTAAIILLSS
     ppkkgg__aadddd extracts each package's meta data (including the "packing list")
     to memory and then runs through the following sequence to fully extract
     the contents of the package:

           1.   A check is made to determine if the package or another version
                of it is already recorded as installed.  If it is,
                installation is terminated if the --uu or --UU options are not
                given.

                If the same version is installed and --UU is not given, it is
                marked as manually installed and process stops.  If the --uu
                option is given, it's assumed the package should be replaced
                by the new version instead.  Before doing so, all packages
                that depend on the pkg being upgraded are checked if they also
                work with the new version.  If that test is not successful,
                the dependent packages are updated first.  The replacing is
                then prepared by moving an existing _+_R_E_Q_U_I_R_E_D___B_Y file aside
                (if it exists), and running pkg_delete(1) on the installed
                package.  Installation then proceeds as if the package was not
                installed, and restores the _+_R_E_Q_U_I_R_E_D___B_Y file afterwards.

           2.   The package build information is extracted from the
                _+_B_U_I_L_D___I_N_F_O file and compared against the result of uname(3).
                If the operating system or architecture of the package differ
                from that of the host, installation is aborted.  This behavior
                is overridable with the --ff flag.

           3.   The package build information from _+_B_U_I_L_D___I_N_F_O is then checked
                for USE_ABI_DEPENDS=NO (or IGNORE_RECOMMENDED).  If the
                package was built with ABI dependency recommendations ignored,
                a warning will be issued.

           4.   A check is made to determine if the package conflicts (from
                @@ppkkggccffll directives, see pkg_create(1)) with an already
                recorded as installed package or if an installed package
                conflicts with the package.  If it is, installation is
                terminated.

           5.   The file list of the package is compared to the file lists of
                the installed packages.  If there is any overlap, the
                installation is terminated.

           6.   All package dependencies (from @@ppkkggddeepp directives, see
                pkg_create(1)) are read from the packing list.  If any of
                these required packages are not currently installed, an
                attempt is made to find and install it; if the missing package
                cannot be found or installed, the installation is terminated.

           7.   If the package contains an _i_n_s_t_a_l_l script, it is executed with
                the following arguments:

                _p_k_g_-_n_a_m_e      The name of the package being installed.

                PPRREE--IINNSSTTAALLLL   Keyword denoting that the script is to perform
                              any actions needed before the package is
                              installed.

                If the _i_n_s_t_a_l_l script exits with a non-zero status code, the
                installation is terminated.

           8.   The files from the file list are extracted to the chosen
                prefix.

           9.   If an _i_n_s_t_a_l_l script exists for the package, it is executed
                with the following arguments:

                _p_k_g___n_a_m_e      The name of the package being installed.

                PPOOSSTT--IINNSSTTAALLLL  Keyword denoting that the script is to perform
                              any actions needed after the package has been
                              installed.

           10.  After installation is complete, a copy of the packing list,
                _d_e_i_n_s_t_a_l_l script, description, and display files are copied
                into _<_P_K_G___D_B_D_I_R_>_/_<_p_k_g_-_n_a_m_e_> for subsequent possible use by
                pkg_delete(1).  Any package dependencies are recorded in the
                other packages' _+_R_E_Q_U_I_R_E_D___B_Y file.

           11.  Finally, if we were upgrading a package, any _+_R_E_Q_U_I_R_E_D___B_Y file
                that was moved aside before upgrading was started is now moved
                back into place.

     The _i_n_s_t_a_l_l script is called with the environment variable PKG_PREFIX set
     to the installation prefix (see the --pp option above).  This allows a
     package author to write a script that reliably performs some action on
     the directory where the package is installed, even if the user might
     change it with the --pp flag to ppkkgg__aadddd.  The scripts are also called with
     the PKG_METADATA_DIR environment variable set to the location of the _+_*
     meta-data files, and with the PKG_REFCOUNT_DBDIR environment variable set
     to the location of the package reference counts database directory.  If
     the --PP flag was given to ppkkgg__aadddd, PKG_DESTDIR will be set to _d_e_s_t_d_i_r.
     Additionally, PKG_METADATA_DIR and PKG_REFCOUNT_DBDIR are prefixed with
     _d_e_s_t_d_i_r.

EENNVVIIRROONNMMEENNTT
     See pkg_install.conf(5) for options, that can also be specified using the
     environment.

EEXXAAMMPPLLEESS
     In all cases, ppkkgg__aadddd will try to install binary packages listed in
     dependencies list.

     You can specify a compiled binary package explicitly on the command line.

     # pkg_add /usr/pkgsrc/packages/All/tcsh-6.14.00.tgz

     If you omit the version number, ppkkgg__aadddd will install the latest version
     available.  With --vv, ppkkgg__aadddd emits more messages to terminal.

     # pkg_add -v /usr/pkgsrc/packages/All/unzip

     You can grab a compiled binary package from remote location by specifying
     a URL.  The base URL can also be provided by the configuration variable,
     PKG_PATH.

     # pkg_add -v ftp://ftp.NetBSD.org/pub/pkgsrc/packages/NetBSD/i386/3.1_2007Q2/All/firefox-2.0.0.4.tgz

     # export PKG_PATH=ftp://ftp.NetBSD.org/pub/pkgsrc/packages/NetBSD/i386/3.1_2007Q2/All
     # pkg_add -v firefox

SSEEEE AALLSSOO
     pkg_admin(1), pkg_create(1), pkg_delete(1), pkg_info(1),
     pkg_install.conf(5), pkgsrc(7)

AAUUTTHHOORRSS
     Jordan Hubbard
             Initial work and ongoing development.
     John Kohl
             NetBSD refinements.
     Hubert Feyrer
             NetBSD wildcard dependency processing, pkgdb, upgrading, etc.
     Thomas Klausner
             HTTP support.
     Joerg Sonnenberger
             Rewrote most of the code base to work without external commands.

BBUUGGSS
     Package upgrading needs a lot more work to be really universal.

     Sure to be others.

pkgsrc                          March 21, 2018                          pkgsrc
