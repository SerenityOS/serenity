--- wireguard-tools-1.0.20210914/src/ipc-uapi.h	2022-01-10 19:32:48.333858269 +0100
+++ wireguard-tools-1.0.20210914/src/ipc-uapi.h	2022-01-10 19:34:25.996423462 +0100
@@ -246,7 +246,7 @@
 			peer->flags |= WGPEER_HAS_PERSISTENT_KEEPALIVE_INTERVAL;
 		} else if (peer && !strcmp(key, "allowed_ip")) {
 			struct wgallowedip *new_allowedip;
-			char *end, *mask = value, *ip = strsep(&mask, "/");
+			char *end, *mask = value, *ip = strtok(mask, "/");
 
 			if (!mask || !char_is_digit(mask[0]))
 				break;
--- wireguard-tools-1.0.20210914/src/config.c	2022-01-10 19:35:02.057260483 +0100
+++ wireguard-tools-1.0.20210914/src/config.c	2022-01-10 19:35:23.359164203 +0100
@@ -352,12 +352,12 @@
 		return true;
 	}
 	sep = mutable;
-	while ((mask = strsep(&sep, ","))) {
+	while ((mask = strtok(sep, ","))) {
 		unsigned long cidr;
 		char *end, *ip;
 
 		saved_entry = strdup(mask);
-		ip = strsep(&mask, "/");
+		ip = strtok(mask, "/");
 
 		new_allowedip = calloc(1, sizeof(*new_allowedip));
 		if (!new_allowedip) {
