--- Python-3.10.0/setup.py	2021-09-18 16:58:59.857000000 +0200
+++ Python-3.10.0/setup.py	2021-09-18 16:59:10.448465217 +0200
@@ -832,8 +832,8 @@
             add_dir_to_list(self.compiler.include_dirs,
                             sysconfig.get_config_var("INCLUDEDIR"))
 
-        system_lib_dirs = ['/lib64', '/usr/lib64', '/lib', '/usr/lib']
-        system_include_dirs = ['/usr/include']
+        system_lib_dirs = ['/lib64', '/usr/lib64', '/lib', '/usr/lib', '/usr/local/lib']
+        system_include_dirs = ['/usr/include', '/usr/local/include']
         # lib_dirs and inc_dirs are used to search for files;
         # if a file is found in one of those directories, it can
         # be assumed that no additional -I,-L directives are needed.
@@ -1144,7 +1144,12 @@
         # Curses support, requiring the System V version of curses, often
         # provided by the ncurses library.
         curses_defines = []
-        curses_includes = []
+        if not CROSS_COMPILING:
+            curses_includes = ['/usr/local/include/ncurses']
+        else:
+            curses_includes = sysroot_paths(
+                ('CPPFLAGS', 'CFLAGS', 'CC'), ['/usr/local/include/ncurses']
+            )
         panel_library = 'panel'
         if curses_library == 'ncursesw':
             curses_defines.append(('HAVE_NCURSESW', '1'))
@@ -1849,7 +1854,12 @@
 
     def detect_uuid(self):
         # Build the _uuid module if possible
-        uuid_incs = find_file("uuid.h", self.inc_dirs, ["/usr/include/uuid"])
+        if not CROSS_COMPILING:
+            uuid_incs = find_file("uuid.h", self.inc_dirs, ["/usr/include/uuid", "/usr/local/include/uuid"])
+        else:
+            uuid_incs = find_file("uuid.h", self.inc_dirs, sysroot_paths(
+                ('CPPFLAGS', 'CFLAGS', 'CC'), ["/usr/include/uuid", "/usr/local/include/uuid"]
+            ))
         if uuid_incs is not None:
             if self.compiler.find_library_file(self.lib_dirs, 'uuid'):
                 uuid_libs = ['uuid']
