diff --git a/netio.c b/netio.c
index 2ed9bb1..e0e9962 100644
--- a/netio.c
+++ b/netio.c
@@ -304,7 +304,7 @@ void packet_queue_to_iovec(const struct Queue *queue, struct iovec *iov, unsigne
 	buffer *writebuf;
 
 #ifndef IOV_MAX
-	#if defined(__CYGWIN__) && !defined(UIO_MAXIOV)
+	#if !defined(UIO_MAXIOV)
 		#define IOV_MAX 1024
 	#elif defined(__sgi)
 		#define IOV_MAX 512 
@@ -346,11 +346,7 @@ void packet_queue_consume(struct Queue *queue, ssize_t written) {
 }
 
 void set_sock_nodelay(int sock) {
-	int val;
-
-	/* disable nagle */
-	val = 1;
-	setsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (void*)&val, sizeof(val));
+	(void)sock;
 }
 
 #if DROPBEAR_SERVER_TCP_FAST_OPEN
@@ -469,7 +465,6 @@ int dropbear_listen(const char* address, const char* port,
 	struct addrinfo hints, *res = NULL, *res0 = NULL;
 	int err;
 	unsigned int nsock;
-	struct linger linger;
 	int val;
 	int sock;
 	uint16_t *allocated_lport_p = NULL;
@@ -548,9 +543,6 @@ int dropbear_listen(const char* address, const char* port,
 		val = 1;
 		/* set to reuse, quick timeout */
 		setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (void*) &val, sizeof(val));
-		linger.l_onoff = 1;
-		linger.l_linger = 5;
-		setsockopt(sock, SOL_SOCKET, SO_LINGER, (void*)&linger, sizeof(linger));
 
 #if defined(IPPROTO_IPV6) && defined(IPV6_V6ONLY)
 		if (res->ai_family == AF_INET6) {
