From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Gunnar Beutner <gbeutner@serenityos.org>
Date: Fri, 18 Jun 2021 15:06:37 +0200
Subject: [PATCH] Skip use of glob() in serenity

We don't have that yet.
---
 src/misc/fs_utils_posix.cpp | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/src/misc/fs_utils_posix.cpp b/src/misc/fs_utils_posix.cpp
index bd90201ba2913f72c26beb88f9bc1f06f491754c..c9a7fc59c8b87e8e4cbd14679e89f5d79a49459f 100644
--- a/src/misc/fs_utils_posix.cpp
+++ b/src/misc/fs_utils_posix.cpp
@@ -24,7 +24,9 @@
 
 #include <cerrno>
 #include <cctype>
+#ifndef __serenity__
 #include <glob.h>
+#endif
 #include <sys/stat.h>
 #include <sys/types.h>
 #include <unistd.h>
@@ -75,6 +77,7 @@ std::string to_native_path(const std::string &path) noexcept
 	// glob(3) sorts by default, so if more than one path will match
 	// the pattern, return the first one (in alphabetic order) that matches.
 	const std::string pattern = translate_to_glob_pattern(path);
+#ifndef __serenity__
 	glob_t pglob;
 	const int err = glob(pattern.c_str(), GLOB_TILDE, nullptr, &pglob);
 	if (err == GLOB_NOMATCH) {
@@ -96,6 +99,9 @@ std::string to_native_path(const std::string &path) noexcept
 	const std::string ret = pglob.gl_pathv[0];
 	globfree(&pglob);
 	return ret;
+#else
+    return path;
+#endif
 }
 
 int create_dir(const char *path, uint32_t mode, uint32_t flags) noexcept
