# ################ Filter for ObjectInputStream #############################
com.sun.management.jmxremote.serial.filter.pattern=!DefaultAgentFilterTest$ThisTypeIsNotUsed
#   A filter, if configured, is used by java.io.ObjectInputStream during
#   deserialization of parameters sent to the JMX default agent to validate the 
#   contents of the stream.
#   A filter is configured as a sequence of patterns, each pattern is either
#   matched against the name of a class in the stream or defines a limit.
#   Patterns are separated by ";" (semicolon).
#   Whitespace is significant and is considered part of the pattern.
#
#   If a pattern includes a "=", it sets a limit.
#   If a limit appears more than once the last value is used.
#   Limits are checked before classes regardless of the order in the sequence of patterns.
#   If any of the limits are exceeded, the filter status is REJECTED.
#
#       maxdepth=value - the maximum depth of a graph
#       maxrefs=value  - the maximum number of internal references
#       maxbytes=value - the maximum number of bytes in the input stream
#       maxarray=value - the maximum array length allowed
#
#   Other patterns, from left to right, match the class or package name as
#   returned from Class.getName.
#   If the class is an array type, the class or package to be matched is the element type.
#   Arrays of any number of dimensions are treated the same as the element type.
#   For example, a pattern of "!example.Foo", rejects creation of any instance or
#   array of example.Foo.
#
#   If the pattern starts with "!", the status is REJECTED if the remaining pattern
#       is matched; otherwise the status is ALLOWED if the pattern matches.
#   If the pattern contains "/", the non-empty prefix up to the "/" is the module name;
#       if the module name matches the module name of the class then
#       the remaining pattern is matched with the class name.
#   If there is no "/", the module name is not compared.
#   If the pattern ends with ".**" it matches any class in the package and all subpackages.
#   If the pattern ends with ".*" it matches any class in the package.
#   If the pattern ends with "*", it matches any class with the pattern as a prefix.
#   If the pattern is equal to the class name, it matches.
#   Otherwise, the status is UNDECIDED.