    static $type$ [[TEST]]ReduceMasked($type$[] a, int idx, boolean[] mask) {
        $type$ res = [[TEST_INIT]];
        for (int i = idx; i < (idx + SPECIES.length()); i++) {
            if(mask[i % SPECIES.length()])
                res = ($type$)Math.max(res, a[i]);
        }

        return res;
    }

    static $type$ [[TEST]]ReduceAllMasked($type$[] a, boolean[] mask) {
        $type$ res = [[TEST_INIT]];
        for (int i = 0; i < a.length; i++) {
            if(mask[i % SPECIES.length()])
                res = ($type$)Math.max(res, a[i]);
        }

        return res;
    }
