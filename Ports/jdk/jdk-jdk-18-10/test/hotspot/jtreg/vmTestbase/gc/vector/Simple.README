Copyright (c) 2007, 2018, Oracle and/or its affiliates. All rights reserved.
DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.

This code is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License version 2 only, as
published by the Free Software Foundation.

This code is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
version 2 for more details (a copy is included in the LICENSE file that
accompanied this code).

You should have received a copy of the GNU General Public License version
2 along with this work; if not, write to the Free Software Foundation,
Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
or visit www.oracle.com if you need additional information or have any
questions.

Simple garbage collection tests test that GC is able to collect simple objects.
The test executes the following for several iterations: create array of objects,
then null all references and refill the array with new objects. The test uses
notions of garbage producer (nsk.share.gc.gp.GarbageProducer) and memory strategy
(nsk.share.gc.gp.MemoryStrategy) to alter it's behaviour. The tests automatically
adjust parameters to memory available to JVM as returned by Runtime.maxMemory().
Tests with "high" memory strategy (*High) create small number of big objects,
tests with "low" memory strategy (*Low) create huge number of small objects.
