/*
 * Copyright (c) 2016, 2018, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 *
 */

super class compiler/linkage/CallSites
version 52:0
{

    // Non-existent methods.

    // I.m1()V vs I.m1(I)V
    public static Method testI1:"(Lcompiler/linkage/I;)V"
        stack 1 locals 1
    {
        aload_0;
        invokeinterface InterfaceMethod compiler/linkage/I."m1":"()V", 1; // throws NSME
        return;
    }

    // X.m1()V vs X.m1(I)V
    public static Method testX1:"(Lcompiler/linkage/X;)V"
        stack 1 locals 1
    {
        aload_0;
        invokevirtual Method compiler/linkage/X."m1":"()V"; // throws NSME
        return;
    }

    // invokestatic of instance methods.

    public static Method testI2:"()V"
        stack 1 locals 0
    {
        iconst_0;
        invokestatic InterfaceMethod compiler/linkage/I."m1":"(I)V"; // throws ICCE
        return;
    }

    public static Method testX2:"()V"
        stack 1 locals 0
    {
        iconst_0;
        invokestatic Method compiler/linkage/X."m1":"(I)V"; // throws ICCE
        return;
    }

    // Virtual invocation of static methods.

    public static Method testI3:"(Lcompiler/linkage/I;)V"
        stack 1 locals 1
    {
        aload_0;
        invokeinterface InterfaceMethod compiler/linkage/I."s1":"()V", 1; // throws ICCE
        return;
    }

    public static Method testX3:"(Lcompiler/linkage/X;)V"
        stack 1 locals 1
    {
        aload_0;
        invokevirtual Method compiler/linkage/X."s1":"()V";  // throws ICCE
        return;
    }

} // end Class CallSites
