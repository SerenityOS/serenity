/*
 * Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 *
 */

package test;

// A simple class to extend an abstract class and get loaded with different
// loaders.  This class is loaded via Loader2.  A similar named class will
// be loaded via the bootstrap loader.
//
// The following code is implemented as java assembler to avoid checks
// of javac.
//
// public class D_ambgs extends bug_21227 {
//  
//     D_ambgs() {
//         System.out.println("Gonna hack this thing");
//     }
//
//     public D_ambgs[] make(A iface) { 
//         throw new Error("do not call me");
//     }
// }

class D_ambgs extends C {

    Method D_ambgs:"()V"
        stack 2 locals 1
    {
        aload_0;
        invokespecial Method test/C."<init>":"()V";
        getstatic     Field java/lang/System.out:"Ljava/io/PrintStream;";
        ldc           String "Gonna hack this thing";
        invokevirtual Method java/io/PrintStream.println:"(Ljava/lang/String;)V";
        return;
    }

    public Method make:"(Ltest/A;)[Ltest/D_ambgs;"
        stack 3 locals 2
    {
         new           class java/lang/Error;
         dup;
         ldc           String "do not call me";
         invokespecial Method java/lang/Error."<init>":"(Ljava/lang/String;)V";
         athrow;
    }
}
