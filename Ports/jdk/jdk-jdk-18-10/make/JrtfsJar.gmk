#
# Copyright (c) 2014, 2020, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

default: all

include $(SPEC)
include MakeBase.gmk
include JavaCompilation.gmk
include JarArchive.gmk
include TextFileProcessing.gmk

# This rule will be depended on due to the MANIFEST line
$(eval $(call SetupTextFileProcessing, BUILD_JAVA_MANIFEST, \
  SOURCE_FILES := $(TOPDIR)/make/data/mainmanifest/manifest.mf, \
  OUTPUT_FILE := $(SUPPORT_OUTPUTDIR)/java-main-manifest.mf, \
  REPLACEMENTS := \
      @@VERSION_SPECIFICATION@@ => $(VERSION_SPECIFICATION) ; \
      @@VERSION_SHORT@@ => $(VERSION_SHORT) ; \
      @@COMPANY_NAME@@ => $(COMPANY_NAME) , \
))

JIMAGE_PKGS := \
    jdk/internal/jimage \
    jdk/internal/jrtfs \
    #

$(eval $(call SetupJavaCompilation, BUILD_JRTFS, \
    COMPILER := bootjdk, \
    TARGET_RELEASE := $(TARGET_RELEASE_JDK8), \
    SRC := $(TOPDIR)/src/java.base/share/classes, \
    EXCLUDE_FILES := module-info.java, \
    INCLUDES := $(JIMAGE_PKGS), \
    BIN := $(SUPPORT_OUTPUTDIR)/jrtfs_classes, \
))

# Because of the explicit INCLUDES in the compilation setup above, the service provider
# file will not be copied unless META-INF/services would also be added to the INCLUDES.
# Adding META-INF/services would include all files in that directory when only the one
# is needed, which is why this explicit copy is defined instead.
$(eval $(call SetupCopyFiles, COPY_JIMAGE_SERVICE_PROVIDER, \
    SRC := $(TOPDIR)/src/java.base/share/classes, \
    DEST := $(SUPPORT_OUTPUTDIR)/jrtfs_classes, \
    FILES := META-INF/services/java.nio.file.spi.FileSystemProvider))

$(eval $(call SetupJarArchive, BUILD_JRTFS_JAR, \
    DEPENDENCIES := $(BUILD_JRTFS) $(COPY_JIMAGE_SERVICE_PROVIDER), \
    SRCS := $(SUPPORT_OUTPUTDIR)/jrtfs_classes, \
    JAR := $(SUPPORT_OUTPUTDIR)/modules_libs/java.base/jrt-fs.jar, \
    MANIFEST := $(SUPPORT_OUTPUTDIR)/java-main-manifest.mf, \
))

all: $(BUILD_JRTFS_JAR)
