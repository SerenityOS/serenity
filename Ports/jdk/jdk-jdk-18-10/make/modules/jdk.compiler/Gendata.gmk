#
# Copyright (c) 2015, 2021, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

include JarArchive.gmk
include JavaCompilation.gmk
include Modules.gmk

################################################################################

# Hook to include the corresponding custom file, if present.
$(eval $(call IncludeCustomExtension, modules/jdk.compiler/Gendata.gmk))

# This is needed to properly setup DOCS_MODULES.
$(eval $(call ReadImportMetaData))

# Modules that should be visible for 9 - the documented modules:
CT_MODULES := $(DOCS_MODULES)

# Get the complete module source path:
CT_MODULESOURCEPATH := $(call GetModuleSrcPath)

CT_DATA_DESCRIPTION += $(TOPDIR)/make/data/symbols/symbols

COMPILECREATESYMBOLS_ADD_EXPORTS := \
    --add-exports java.base/jdk.internal.javac=java.compiler.interim,jdk.compiler.interim \
    --add-exports jdk.compiler.interim/com.sun.tools.javac.api=ALL-UNNAMED \
    --add-exports jdk.compiler.interim/com.sun.tools.javac.code=ALL-UNNAMED \
    --add-exports jdk.compiler.interim/com.sun.tools.javac.util=ALL-UNNAMED \
    --add-exports jdk.compiler.interim/com.sun.tools.javac.jvm=ALL-UNNAMED \
    #

$(eval $(call SetupJavaCompilation, COMPILE_CREATE_SYMBOLS, \
    TARGET_RELEASE := $(TARGET_RELEASE_BOOTJDK), \
    SRC := $(TOPDIR)/make/langtools/src/classes \
        $(TOPDIR)/src/jdk.jdeps/share/classes, \
    INCLUDES := build/tools/symbolgenerator com/sun/tools/classfile, \
    BIN := $(BUILDTOOLS_OUTPUTDIR)/create_symbols, \
    DISABLED_WARNINGS := options, \
    JAVAC_FLAGS := \
        $(INTERIM_LANGTOOLS_ARGS) \
        $(COMPILECREATESYMBOLS_ADD_EXPORTS), \
))

$(SUPPORT_OUTPUTDIR)/symbols/ct.sym: \
    $(COMPILE_CREATE_SYMBOLS) \
    $(wildcard $(TOPDIR)/make/data/symbols/*) \
    $(MODULE_INFOS)
	$(RM) -r $(@D)
	$(MKDIR) -p $(@D)
	$(ECHO) Creating ct.sym classes
	$(JAVA_SMALL) $(INTERIM_LANGTOOLS_ARGS) \
	    $(COMPILECREATESYMBOLS_ADD_EXPORTS) \
	    -classpath $(BUILDTOOLS_OUTPUTDIR)/create_symbols \
	    build.tools.symbolgenerator.TransitiveDependencies \
	    $(@D)/system-modules \
	    $(CT_MODULESOURCEPATH) \
	    $(CT_MODULES)
	$(JAVA_SMALL) $(INTERIM_LANGTOOLS_ARGS) \
	    $(COMPILECREATESYMBOLS_ADD_EXPORTS) \
	    -classpath $(BUILDTOOLS_OUTPUTDIR)/create_symbols \
	    build.tools.symbolgenerator.CreateSymbols \
	    build-ctsym \
	    $(CT_DATA_DESCRIPTION) \
	    $(@D)/ct.sym \
	    $(SOURCE_DATE_EPOCH) \
	    $(JDK_SOURCE_TARGET_VERSION) \
	    $(@D)/system-modules
	$(TOUCH) $@

# Copy ct.sym to the modules libs dir
$(eval $(call SetupCopyFiles, COPY_TO_LIBS, \
    FILES := $(SUPPORT_OUTPUTDIR)/symbols/ct.sym, \
    DEST := $(SUPPORT_OUTPUTDIR)/modules_libs/jdk.compiler, \
))

TARGETS += $(COPY_TO_LIBS)

################################################################################
