#
# Copyright (c) 2015, 2020, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

main.usage.summary=\
Usage: {0} (create|extract|list|describe|hash) <OPTIONS> <jmod-file>\n\
use --help for a list of possible options

main.usage=\
Usage: {0} (create|extract|list|describe|hash) <OPTIONS> <jmod-file>\n\

error.prefix=Error:
warn.prefix=Warning:

main.opt.mode=\
\Main operation modes:
main.opt.mode.create=\
\create    - Creates a new jmod archive
main.opt.mode.extract=\
\extract   - Extracts all the files from the archive
main.opt.mode.list=\
\list      - Prints the names of all the entries
main.opt.mode.describe=\
\describe  - Prints the module details
main.opt.mode.hash=\
\hash      - Records hashes of tied modules.

main.opt.help=Print this help message
main.opt.help-extra=Print help on extra options
main.opt.version=Version information
main.opt.class-path=Application jar files|dir containing classes
main.opt.libs=Location of native libraries
main.opt.cmds=Location of native commands
main.opt.config=Location of user-editable config files
main.opt.extractDir=Target directory for extract
main.opt.dry-run=Dry run of hash mode
main.opt.exclude=Exclude files matching the supplied comma separated pattern\
\ list, each element using one the following forms: <glob-pattern>,\
\ glob:<glob-pattern> or regex:<regex-pattern>
main.opt.header-files=Location of header files
main.opt.legal-notices=Location of legal notices
main.opt.module-version= Module version
main.opt.main-class=Main class
main.opt.main-class.arg=class-name
main.opt.man-pages=Location of man pages
main.opt.target-platform=Target platform
main.opt.target-platform.arg=target-platform
main.opt.module-path=Module path
main.opt.hash-modules=Compute and record hashes to tie a packaged module\
\ with modules matching the given <regex-pattern> and depending upon it directly\
\ or indirectly. The hashes are recorded in the JMOD file being created, or\
\ a JMOD file or modular JAR on the module path specified the jmod hash command.
main.opt.do-not-resolve-by-default=Exclude from the default root set of modules
main.opt.warn-if-resolved=Hint for a tool to issue a warning if the module \
is resolved. One of deprecated, deprecated-for-removal, or incubating

main.opt.cmdfile=Read options from the specified file

module.hashes.recorded=Hashes are recorded in module {0}

err.missing.mode=one of create, extract, list, describe, or hash must be specified
err.invalid.mode=mode must be one of create, extract, list, describe, or hash: {0}
err.cannot.create.dir=cannot create directory {0}
err.classpath.must.be.specified=--class-path must be specified
err.jmod.must.be.specified=jmod-file must be specified
err.invalid.version=invalid module version {0}
err.output.must.be.specified=--output must be specified
err.mods.must.be.specified=--mods must be specified
err.modulepath.must.be.specified=--module-path must be specified when hashing modules
err.invalid.main-class=invalid main-class name: {0}
err.path.not.found=path not found: {0}
err.path.not.valid=invalid path: {0}
err.path.not.a.dir=path must be a directory: {0}
err.invalid.class.path.entry=invalid class path entry: {0}
err.file.already.exists=file already exists: {0}
err.jmod.not.found=no jmod file found: {0}
err.bad.pattern=bad pattern {0}
err.bad.WarnIfResolvedReason=bad reason: {0}, must be one of deprecated,\
\ deprecated-for-removal, or incubating
err.unknown.option=unknown option(s): {0}
err.missing.arg=no value given for {0}
err.internal.error=internal error: {0} {1} {2}
err.invalid.dryrun.option=--dry-run can only be used with hash mode
err.module.descriptor.not.found=Module descriptor not found
err.missing.export.or.open.packages=Packages that are exported or open in {0} are not present: {1}
err.module.resolution.fail=Resolution failed: {0}
err.no.moduleToHash=No hashes recorded: no module matching {0} found to record hashes
warn.invalid.arg=Invalid classname or pathname not exist: {0}
warn.no.module.hashes=No hashes recorded: no module specified for hashing depends on {0}
warn.ignore.entry=ignoring entry {0}, in section {1}
warn.ignore.duplicate.entry=ignoring duplicate entry {0}, in section {1}


