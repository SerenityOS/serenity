#
# Copyright (c) 1999, 2017, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

error.multiple.main.operations=Impossibile specificare pi\u00F9 di un'opzione '-cuxtid'
error.cant.open=impossibile aprire: {0}
error.illegal.option=Opzione non valida: {0}
error.unrecognized.option=opzione non riconosciuta: {0}
error.missing.arg=l''opzione {0} richiede un argomento
error.bad.file.arg=Errore durante l'analisi degli argomenti del file
error.bad.option=\u00C8 necessario specificare una delle opzioni -{ctxuid}.
error.bad.cflag=Per il flag 'c' \u00E8 necessario specificare file manifest o di input.
error.bad.uflag=Per il flag 'u' \u00E8 necessario specificare il flag 'e' oppure file manifest o di input.
error.bad.eflag=Il flag 'e' e il manifest con l'attributo 'Main-Class' non possono essere specificati\ninsieme.
error.bad.dflag=Per l'opzione '-d, --describe-module' non \u00E8 necessario specificare alcun file di input
error.bad.reason=Motivo non valido: {0}. Deve essere deprecated, deprecated-for-removal o incubating
error.nosuch.fileordir={0} : file o directory inesistente
error.write.file=Errore durante la scrittura del file jar esistente
error.create.dir={0} : impossibile creare la directory
error.incorrect.length=lunghezza non valida durante l''elaborazione: {0}
error.create.tempfile=Impossibile creare il file temporaneo.
error.hash.dep={0} dipendenze del modulo di hashing. Impossibile trovare il modulo {1} nel percorso del modulo
error.module.options.without.info=Una delle opzioni --module-version o --hash-modules non contiene module-info.class
error.no.operative.descriptor=Nessun descrittore operativo per la release: {0}
error.no.root.descriptor=Nessun descrittore di modulo radice, specificare --release
error.unable.derive.automodule=Impossibile derivare il descrittore di modulo per: {0}
error.unexpected.module-info=Descrittore di modulo {0} imprevisto
error.module.descriptor.not.found=Descrittore di modulo non trovato
error.invalid.versioned.module.attribute=Attributo descrittore del modulo {0} non valido.
error.missing.provider=Provider di servizi non trovato: {0}
error.release.value.notnumber=release {0} non valida
error.release.value.toosmall=la release {0} non \u00E8 valida: deve essere >= 9
error.release.unexpected.versioned.entry=voce con controllo delle versioni non prevista {0} per la release {1}
error.validator.jarfile.exception=impossibile convalidare {0}: {1}
error.validator.jarfile.invalid=file jar {0} con pi\u00F9 release non valido eliminato
error.validator.bad.entry.name=nome di voce {0} con formato non valido
error.validator.version.notnumber=il nome di voce {0} non dispone di un numero di versione
error.validator.entryname.tooshort=nome di voce {0} troppo breve. Non \u00E8 una directory
error.validator.isolated.nested.class=la voce {0} \u00E8 una classe nidificata isolata
error.validator.new.public.class=la voce {0} contiene una nuova classe pubblica non trovata nelle voci di base
error.validator.incompatible.class.version=la voce {0} ha una versione incompatibile con una versione precedente
error.validator.different.api=la voce {0} contiene una classe con un''API diversa dalla versione precedente
error.validator.names.mismatch=la voce {0} contiene una classe con nome interno {1}. I nomi non corrispondono
error.validator.info.name.notequal=module-info.class in una directory con controllo delle versioni contiene un nome errato
error.validator.info.requires.transitive=module-info.class in una directory con controllo delle versioni contiene valori "requires transitive" aggiuntivi
error.validator.info.requires.added=module-info.class in una directory con controllo delle versioni contiene valori "requires" aggiuntivi
error.validator.info.requires.dropped=module-info.class in una directory con controllo delle versioni contiene valori "requires" mancanti
error.validator.info.exports.notequal=module-info.class in una directory con controllo delle versioni contiene "exports" differenti
error.validator.info.opens.notequal=module-info.class in una directory con controllo delle versioni contiene valori "opens" differenti
error.validator.info.provides.notequal=module-info.class in una directory con controllo delle versioni contiene valori "provides" differenti
error.validator.info.version.notequal={0}: module-info.class in una directory con controllo delle versioni contiene valori "version" differenti
error.validator.info.manclass.notequal={0}: module-info.class in una directory con controllo delle versioni contiene valori "main-class" differenti
warn.validator.identical.entry=Avvertenza: la voce {0} contiene una classe\nidentica a una voce gi\u00E0 presente nel file jar
warn.validator.resources.with.same.name=Avvertenza: voce {0}. Pi\u00F9 risorse con lo stesso nome
warn.validator.concealed.public.class=Avvertenza: la voce {0} \u00E8 una classe pubblica\nin un package nascosto. Il posizionamento di questo file jar nel classpath\ngenerer\u00E0 interfacce pubbliche incompatibili
warn.release.unexpected.versioned.entry=voce con controllo delle versioni non prevista {0}
out.added.manifest=aggiunto manifest
out.added.module-info=aggiunto module-info: {0}
out.automodule=Nessun descrittore di modulo trovato. Derivato modulo automatico.
out.update.manifest=aggiornato manifest
out.update.module-info=aggiornato module-info: {0}
out.ignore.entry=la voce {0} sar\u00E0 ignorata
out.adding=aggiunta in corso di: {0}
out.deflated=(compresso {0}%)
out.stored=(memorizzato 0%)
out.create=\     creato: {0}
out.extracted=estratto: {0}
out.inflated=\ decompresso: {0}
out.size=(in = {0}) (out = {1})

usage.compat=Interfaccia di compatibilit\u00E0:\nUso: jar {ctxui}[vfmn0PMe] [file-jar] [file-manifest] [punto di ingresso] [-C dir] file] ...\nOpzioni:\n    -c  crea un nuovo archivio\n    -t  visualizza l'indice dell'archivio\n    -x  estrae i file con nome (o tutti i file) dall'archivio\n    -u  aggiorna l'archivio esistente\n    -v  genera output commentato dall'output standard\n    -f  specifica il nome file dell'archivio\n    -m  include informazioni manifest dal file manifest specificato\n    -n  esegue la normalizzazione Pack200 dopo la creazione di un nuovo archivio\n    -e  specifica il punto di ingresso per l'applicazione stand-alone \n        inclusa nel file jar eseguibile\n    -0  solo memorizzazione; senza compressione ZIP\n    -P  conserva i componenti iniziali '/' (percorso assoluto) e \\"..\\" (directory padre) dai nomi file\n    -M  consente di non creare un file manifest per le voci\n    -i  genera informazioni sull'indice per i file jar specificati\n    -C  imposta la directory specificata e include il file seguente\nSe un file \u00E8 una directory, verr\u00E0 elaborato in modo ricorsivo.\nIl nome del file manifest, del file di archivio e del punto di ingresso devono\nessere specificati nello stesso ordine dei flag 'm', 'f' ed 'e'.\n\nEsempio 1: archiviazione di due file di classe in un archivio con il nome classes.jar: \n       jar cvf classes.jar Foo.class Bar.class \nEsempio 2: utilizzo del file manifest esistente 'mymanifest' e archiviazione di tutti i\n           file della directory foo/ in 'classes.jar': \n       jar cvfm classes.jar mymanifest -C foo/ .\n

main.usage.summary=Uso: jar [OPTION...] [ [--release VERSION] [-C dir] file] ...
main.usage.summary.try=Utilizzare 'jar --help' per ulteriori informazioni.

main.help.preopt=Uso: jar [OPTION...] [ [--release VERSION] [-C dir] file] ...\nIl file jar crea un archivio per le classi e le risorse e pu\u00F2 manipolare o\nripristinare le singole classi o risorse da un archivio.\n\n Esempi:\n # Crea un archivio denominato classes.jar con due file di classe:\n jar --create --file classes.jar Foo.class Bar.class\n # Crea un archivio mediante un file manifest esistente, con tutti i file in foo/:\n jar --create --file classes.jar --manifest mymanifest -C foo/ .\n # Crea un archivio jar modulare, in cui il descrittore di modulo si trova in\n # classes/module-info.class:\n jar --create --file foo.jar --main-class com.foo.Main --module-version 1.0\n     -C foo/ classes resources\n # Aggiorna un file jar non modulare esistente in un file jar modulare:\n jar --update --file foo.jar --main-class com.foo.Main --module-version 1.0\n     -C foo/ module-info.class\n # Crea un file jar per pi\u00F9 release, posizionando alcuni file nella directory META-INF/versions/9:\n jar --create --file mr.jar -C foo classes --release 9 -C foo9 classes\n\nPer abbreviare o semplificare il comando jar, \u00E8 possibile specificare gli argomenti in un file\ndi testo distinto e passarlo al comando jar con il segno @ come prefisso.\n\n Esempi:\n # Legge le opzioni aggiuntive e la lista di file di classe dal file classes.list\n jar --create --file my.jar @classes.list\n
main.help.opt.main=\ Modalit\u00E0 di funzionamento principale:\n
main.help.opt.main.create=\  -c, --create               Crea l'archivio
main.help.opt.main.generate-index=\  -i, --generate-index=FILE  Genera le informazioni sull'indice per gli archivi\n                             jar specificati
main.help.opt.main.list=\  -t, --list                 Visualizza l'indice dell'archivio
main.help.opt.main.update=\  -u, --update               Aggiorna un archivio jar esistente
main.help.opt.main.extract=\  -x, --extract              Estrae i file con nome (o tutti i file) dall'archivio
main.help.opt.main.describe-module=\  -d, --describe-module      Visualizza il descrittore di modulo o il nome modulo automatico
main.help.opt.any=\ Modificatori di funzionamento validi in qualsiasi modalit\u00E0:\n\n  -C DIR                     Passa alla directory specificata e include il\n                              file seguente
main.help.opt.any.file=\  -f, --file=FILE            Il nome file dell'archivio. Se omesso, viene usato stdin o\n                             stdout in base all'operazione\n      --release VERSION      Posiziona tutti i file successivi in una directory con controllo delle versioni\n                             del file jar (ad esempio, META-INF/versions/VERSION/)
main.help.opt.any.verbose=\  -v, --verbose              Genera l'output descrittivo nell'output standard
main.help.opt.create=\ Modificatori di funzionamento validi solo nella modalit\u00E0 di creazione:\n
main.help.opt.create.normalize=\  -n, --normalize            Normalizza le informazioni nel nuovo archivio jar\n                             dopo la creazione
main.help.opt.create.update=\ Modificatori di funzionamento validi solo nella modalit\u00E0 di creazione e aggiornamento:\n
main.help.opt.create.update.main-class=\  -e, --main-class=CLASSNAME Punto di ingresso per le applicazioni\n                             stand-alone incluse nell'archivio jar modulare o\n                             eseguibile
main.help.opt.create.update.manifest=\  -m, --manifest=FILE        Include le informazioni sul file manifest dal file\n                             manifest specificato
main.help.opt.create.update.no-manifest=\  -M, --no-manifest          Non crea un file manifest per le voci
main.help.opt.create.update.module-version=\      --module-version=VERSION    Versione del modulo utilizzata durante la creazione di un file\n                             jar modulare o l'aggiornamento di un file jar non modulare
main.help.opt.create.update.hash-modules=\      --hash-modules=PATTERN Calcola e registra gli hash dei moduli \n                             corrispondenti in base al pattern specificato e dipendenti\n                             in modo diretto o indiretto dalla creazione di un file jar modulare\n                             o dall'aggiornamento di un file jar non modulare
main.help.opt.create.update.module-path=\  -p, --module-path          Posizione della dipendenza del modulo per la generazione\n                             dell'hash
main.help.opt.create.update.do-not-resolve-by-default=\      --do-not-resolve-by-default  Esclude dal set radice predefinito dei moduli
main.help.opt.create.update.warn-if-resolved=\      --warn-if-resolved     Suggerimento per uno strumento per l'emissione di un'avvertenza se il modulo\n                             viene risolto. Pu\u00F2 essere deprecated, deprecated-for-removal\n                             o incubating
main.help.opt.create.update.index=\ Modificatori di funzionamento validi solo nella modalit\u00E0 di creazione, aggiornamento e di generazione dell'indice:\n
main.help.opt.create.update.index.no-compress=\  -0, --no-compress          Solo per la memorizzazione. Non utilizza alcuna compressione ZIP
main.help.opt.other=\ Altre opzioni:\n
main.help.opt.other.help=\  -h, --help[:compat]        Fornisce questa Guida o facoltativamente la Guida sulla compatibilit\u00E0
main.help.opt.other.help-extra=\      --help-extra           Fornisce la Guida per le opzioni non standard
main.help.opt.other.version=\      --version              Stampa la versione del programma
main.help.postopt=\ Un archivio \u00E8 un file jar modulare se un descrittore di modulo, 'module-info.class', si trova\n nella directory radice delle directory specificate o nella radice dell'archivio jar\n stesso. Le operazioni seguenti sono valide solo durante la creazione di un file jar modulare\n o l'aggiornamento di un file jar non modulare esistente: '--module-version',\n '--hash-modules' e '--module-path'.\n\n Gli argomenti obbligatori o facoltativi per le opzioni lunghe sono obbligatori\n  o facoltativi anche per le opzioni brevi corrispondenti.
