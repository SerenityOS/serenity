parameters:
  os: 'Linux'
  arch: 'i686'
  toolchain: 'gcc'
  build_directory: ''
  ccache_version: 1 # Increment this number if CI has trouble with ccache.
  with_unicode_caches: true

steps:
  - script: |
      echo "##vso[task.setvariable variable=timestamp]$(date -u +"%Y%m%d%H%M_%S")"
    displayName: 'Stamps'

  - ${{ if ne(parameters.arch, 'Lagom') }}:
    - ${{ if eq(parameters.toolchain, 'clang') }}:
      - task: Cache@2
        inputs:
          key: '"toolchain" | "${{ parameters.arch }}" | Toolchain/BuildClang.sh | Toolchain/Patches/*[!gcc].patch | Userland/Libraries/LibC/**/*.h | Userland/Libraries/LibPthread/**/*.h'
          path: $(Build.SourcesDirectory)/Toolchain/Cache
        displayName: 'Toolchain Cache'
    - ${{ if eq(parameters.toolchain, 'gcc') }}:
      - task: Cache@2
        inputs:
          key: '"toolchain" | "${{ parameters.arch }}" | Toolchain/BuildIt.sh | Toolchain/Patches/*[!llvm].patch | Userland/Libraries/LibC/**/*.h | Userland/Libraries/LibPthread/**/*.h'
          path: $(Build.SourcesDirectory)/Toolchain/Cache
        displayName: 'Toolchain Cache'

  - task: Cache@2
    inputs:
      key: '"ccache" | "${{ parameters.os }}" | "${{ parameters.arch }}" | "${{ parameters.toolchain }}" | "${{ parameters.ccache_version }}" | "$(timestamp)"'
      restoreKeys: |
        "ccache" | "${{ parameters.os }}" | "${{ parameters.arch }}" | "${{ parameters.toolchain }}" | "${{ parameters.ccache_version }}"
      path: $(CCACHE_DIR)
    displayName: 'Compiler Cache'

  - ${{ if eq(parameters.with_unicode_caches, true) }}:
    - task: Cache@2
      inputs:
        key: '"unicode_data" | Meta/CMake/unicode_data.cmake'
        path: $(Build.SourcesDirectory)/${{ parameters.build_directory }}/UCD
      displayName: 'UnicodeData Cache'

    - task: Cache@2
      inputs:
        key: '"unicode_locale" | Meta/CMake/unicode_data.cmake'
        path: $(Build.SourcesDirectory)/${{ parameters.build_directory }}/CLDR
      displayName: 'UnicodeLocale Cache'

  - script: |
      ccache -M 5G
      ccache -s
    displayName: 'Configure ccache'
